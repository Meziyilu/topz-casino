generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  balance   Int      @default(0)
  createdAt DateTime @default(now())

  bets Bet[]
}

enum BetSide {
  PLAYER
  BANKER
  TIE
  PLAYER_PAIR
  BANKER_PAIR
  ANY_PAIR
  PERFECT_PAIR
}

enum RoundOutcome {
  PLAYER
  BANKER
  TIE
}

enum RoundPhase {
  BETTING
  REVEAL
  SETTLED
}

enum RoomCode {
  R30 // 30秒房
  R60 // 60秒房
  R90 // 90秒房
}

model Room {
  id              String   @id @default(cuid())
  code            RoomCode @unique
  name            String
  durationSeconds Int
  createdAt       DateTime @default(now())

  rounds Round[]
  bets   Bet[]

  @@index([code])
}

/**
 * 每個房間每天的局序從 1 重新開始：
 * - 唯一鍵： (roomId, day, roundSeq)
 * - day：請用「台北當地日期 00:00」轉成 UTC 存入（Date-only semantics）
 * 牌面存 Json，方便前端做開牌動畫與路子。
 */
model Round {
  id       String   @id @default(cuid())
  roomId   String
  day      DateTime
  roundSeq Int

  phase       RoundPhase    @default(BETTING)
  outcome     RoundOutcome?
  playerTotal Int?
  bankerTotal Int?

  playerCards Json? // [{rank:1..13,suit:0..3}, ...]
  bankerCards Json? // 同上

  playerPair  Boolean?
  bankerPair  Boolean?
  anyPair     Boolean?
  perfectPair Boolean?

  startedAt DateTime // 回合開始時間（UTC）
  settledAt DateTime? // 結算完成時間（UTC）
  createdAt DateTime  @default(now())

  room Room  @relation(fields: [roomId], references: [id])
  bets Bet[]

  @@unique([roomId, day, roundSeq])
  @@index([roomId, day])
}

/**
 * 下注記錄：
 * - 直接掛房間 + 當日局序，方便在回合尚未持久化時先寫單
 * - 若有預先建立 Round，可選擇把 roundId 一起寫入
 */
model Bet {
  id       String   @id @default(cuid())
  userId   String
  roomId   String
  // 指向每日回合（為了查詢效率，同步保存 day & roundSeq）
  day      DateTime
  roundSeq Int

  side      BetSide
  amount    Int
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  room    Room    @relation(fields: [roomId], references: [id])
  round   Round?  @relation(fields: [roundId], references: [id])
  roundId String?

  @@index([userId, roomId, createdAt])
  @@index([roomId, day, roundSeq])
}
