// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  balance     Int      @default(0)
  bankBalance Int      @default(0)
  isAdmin     Boolean  @default(false)
  createdAt   DateTime @default(now())

  bets    Bet[]
  ledgers Ledger[]
}

model Ledger {
  id        String     @id @default(cuid())
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  type      LedgerType
  amount    Int
  note      String?
  createdAt DateTime   @default(now())
}

enum LedgerType {
  DEPOSIT
  WITHDRAW
  TRANSFER
  WIN
  LOSE
  ADMIN_ADD
  ADMIN_DEDUCT
}

model Room {
  code            String   @id
  name            String
  durationSeconds Int
  rounds          Round[]
}

model Round {
  id          String     @id @default(cuid())
  roomCode    String
  room        Room       @relation(fields: [roomCode], references: [code])
  seq         Int
  phase       RoundPhase
  outcome     RoundOutcome?
  playerTotal Int?
  bankerTotal Int?
  createdAt   DateTime   @default(now())
  bets        Bet[]
}

enum RoundPhase {
  BETTING
  REVEALING
  SETTLED
}

enum RoundOutcome {
  PLAYER
  BANKER
  TIE
}

model Bet {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  roundId   String
  round     Round    @relation(fields: [roundId], references: [id])
  side      BetSide
  amount    Int
  createdAt DateTime @default(now())
}

enum BetSide {
  PLAYER
  BANKER
  TIE
}
